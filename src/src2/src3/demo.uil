const test = fn() int: {
    let value = int: 10;
    value = value 25;
    return value;
    // return either returns from the function or from a cast expression in a fn body
};

const test_emitted =
    \lang=.js
    \\  const test = function() {
    \\      let value = 10;
    \\      value += 25;
    \\      return value;
    \\ }
;

//const Counter = widget() html: {
//    state count = int: 0;
//    if(count > 10) return [
//        "Uh oh! You took the counter too high!",
//        .button("Reset Counter", .onclick=fn() count = 0),
//    ];
//    return [
//        "The count is: ", count»std.Number.humanize(#, .en_US),
//        ". ", .button["Increment", .onclick=fn() count += 1],
//    ];
//};

const Counter_emitted =
    \lang=.js
    \\  const test = function(__before_once) {
    \\      …
    \\  }
;