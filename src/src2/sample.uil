const std = @import("std");

const other = fn() {
    var result = 25;
    return result;
};

pub const main = fn() {
    return other2();
};

const UserInput = widget() html: {
    state value = string: "";
    memo value_num = f64: value^Number(#) catch null;

    return .div[
        .input[.value = value, .onchange = fn(e) value = e.currentTarget.value],
        .submit[.enabled=value_num != null, "Submit!"],
    ];
};

const Counter = widget() html: {
    state value = i51: 25;
    return .div[
        .button["--", .onclick = fn() void: value = value - 1],
        "Value: ", string: value,
        .button["++", .onclick = fn() void: value = value + 1],
    ];
};

const sample_html = .html[
    .head[
        .title["Character Creator"],
        .style[
            \lang=.css
            \\html{
            \\  display: grid;
            \\  grid-template-columns: 1fr [start] minmax(0, 800px) [end] 1fr;
            \\}
            \\body{
            \\  grid-column: start / end;
            \\}
        ],
    ],
    .body[
        .script[.src="index.js"],
    ],
];

const Navigator = widget() {
    state current_url = "";

    const handler = once fn(url) current_url = url.pathname + url.search;
    once navigate_event_handlers.push(handler);
    defer navigate_event_handlers = navigate_event_handlers.filter(fn(v) v != handler);

    memo go = fn() void: navigate(.path = spa_navigator_input.value);

    return .div[
        .input[.value=@mut(current_url)] //, .onkeydown = fn(k) if(k.key == "Enter") go() else {}],
        .button("‚èé", .onclick = fn() go()),
        .button("üóò", .onclick = fn() alert("TODO refresh")),
    ];
};

pub const realmain = fn() {
    @mount(Navigator(), @js().document.body);
};

const test_enum = @enum(.one, .two): .one;

const CharacterView = widget() html: {
    const traits = @obj(.a=string, .b=string)[]: [];
    true; false;
};

// react
//
// function Counter() {
//     const [value, setValue] = useState(25);
//     return <div>
//         <button onclick={() => setValue(value - 1)}>--</button>
//         Value: {value}
//         <button onclick={() => setValue(value + 1)}>++</button>
//     </div>
// }
