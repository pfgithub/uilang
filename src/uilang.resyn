file = expression[';'];

expression =
	| #suffix(suffixop)<suffixop>
	| vardecl
	| returnstatement
	| htmlelement
	| htmlattribute
	| parens
	| block
	| function
	| variable
	| number
	| string
;

vardecl = identifier '=' expression;
// returns from a function, not a block or some parenthesis
returnstatement = 'return' expression;
htmlelement = '.' identifier parens;
htmlattribute = ':' identifier '=' expression;

// returns the last expression
parens = '(' expression[','] ')';
// can be broken out of (or returned if it's a function block)
block = '{' expression[';'] '}';

function = ('widget'<widget> | 'fn'<function>)<kind> '(' identifier[','] ')' expression;

variable = identifier;
number = :number;
string = :string_start<> (:string | :string_escape<escape>)[]<bits> :string_end<>;

suffixop = '!';

identifier = :identifier; // to allow for future expansion